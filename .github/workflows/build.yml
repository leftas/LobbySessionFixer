name: Build PTaH
on: 
  push:
    branches:
     - master
  pull_request:
    branches:
     - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            os_short: win
            compiler_cc: msvc
          - os: ubuntu-latest
            os_short: linux
            compiler_cc: clang
            compiler_cxx: clang++
          - os: ubuntu-18.04
            os_short: linux
            compiler_cc: clang-8
            compiler_cxx: clang++-8
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os_short }}-${{ matrix.compiler_cc }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: ptah

      - name: checkout hl2sdk-csgo
        uses: actions/checkout@v2
        with:
          path: hl2sdk-csgo
          repository: alliedmodders/hl2sdk
          ref: csgo
      
      - name: checkout sourcemod
        uses: actions/checkout@v2
        with:
          path: sourcemod
          repository: alliedmodders/sourcemod
          submodules: recursive

      - name: checkout metamod-source
        uses: actions/checkout@v2
        with:
          path: metamod-source
          repository: alliedmodders/metamod-source
          submodules: recursive

      - name: Checkout AMBuild
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install Linux dependencies
        if: startsWith(runner.os, 'Linux')
        shell: bash
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev ${{ matrix.compiler_cc }}

      # Setup Python for AMBuild
      - uses: actions/setup-python@v2
        name: Setup Python 3.8
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Install AMBuild
        uses: BSFishy/pip-action@v1
        with:
          packages: ./ambuild    

      - name: Select clang compiler
        if: startsWith(runner.os, 'Linux')
        run: |
          echo "CC=${{ matrix.compiler_cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler_cxx }}" >> $GITHUB_ENV
          ${{ matrix.compiler_cc }} --version
          ${{ matrix.compiler_cxx }} --version

      - name: Find Visual C++ compilers and make all environment variables global (W)
        if: startsWith(runner.os, 'Windows')
        shell: cmd
        run: |
          :: See https://github.com/microsoft/vswhere/wiki/Find-VC
          for /f "usebackq delims=*" %%i in (`vswhere -latest -property installationPath`) do (
            call "%%i"\Common7\Tools\vsdevcmd.bat -arch=x86 -host_arch=x64
          )
          :: Loop over all environment variables and make them global.
          for /f "delims== tokens=1,2" %%a in ('set') do (
            echo>>"%GITHUB_ENV%" %%a=%%b
          )

      - name: Build
        working-directory: ptah
        run: |
          mkdir build
          cd build
          python ../configure.py --enable-optimize --hl2sdk-root ${{github.workspace}} --mms-path ${{github.workspace}}/metamod-source --sm-path ${{github.workspace}}/sourcemod
          ambuild

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.compiler_cc }}
          path: ${{github.workspace}}/ptah/build/package

          
